{"ast":null,"code":"var _jsxFileName = \"/Users/joshuagauthreaux/Development/code/project/extractor_frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport DisplayColors from './components/DisplayColors';\nimport DisplayFeatureImage from './components/DisplayFeatureImage';\nimport MatchedImages from './components/MatchedImages';\nimport { Palette } from 'color-thief-react';\nimport About from './components/About';\nimport Pinned from './components/Pinned'; // import ColorThief from '../node_modules/colorthief/dist/color-thief.mjs'\n// const ColorThief = require('colorthief');\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      fetch(\"http://localhost:3001/images\").then(r => r.json()).then(allImages => this.setState({\n        allImages\n      }));\n      fetch(\"http://localhost:3001/colors\").then(r => r.json()).then(allColors => this.setState({\n        allColors\n      }));\n    };\n\n    this.chooseFeaturedImage = imageInfo => {\n      //console.log(\"we did it yay\", imageInfo)\n      this.setState({\n        featuredImage: imageInfo\n      });\n    };\n\n    this.featureClick = image => {\n      console.log(image.id);\n      this.setState({\n        allImages: this.state.allImages.map(img => {\n          if (img.id === image.id) {\n            img.pinned = true;\n          }\n\n          return img;\n        })\n      });\n      this.updatePinned(image.id);\n    };\n\n    this.updatePinned = id => {\n      console.log(id);\n      fetch(`http://localhost:3001/images/${id}`, {\n        method: 'PATCH',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          pinned: true\n        })\n      }).then(r => r.json()).then(img => console.log(img));\n    };\n\n    this.imageSrc = () => {\n      if (this.state.featuredImage !== null) {\n        return this.state.featuredImage;\n      }\n    };\n\n    this.deleteMe = (e, id) => {\n      e.preventDefault();\n      console.log(id);\n      fetch(`http://localhost:3001/images/${id}`, {\n        method: \"DELETE\"\n      });\n      this.setState({\n        featuredImage: []\n      });\n      this.setState({\n        allImages: this.state.allImages.filter(img => img.id !== id)\n      });\n    };\n\n    this.saveColor = color => {\n      console.log(color);\n      this.setState({\n        colors: color\n      });\n      fetch(`http://localhost:3001/colors`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          rgb: color\n        })\n      }).then(r => r.json()).then(console.log(\"hi\"));\n    };\n\n    this.state = {\n      allImages: null,\n      allColors: null,\n      featuredImage: [],\n      colors: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(DisplayFeatureImage, {\n      featureImage: this.state.featuredImage,\n      featuredClick: this.featureClick,\n      handleClick: this.deleteMe,\n      savedColor: this.state.colors,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Palette, {\n      src: this.state.featuredImage.html,\n      crossOrigin: \"Anonymous\",\n      colorCount: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, ({\n      data\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Row\",\n      style: {\n        color: data\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, data.map(color => /*#__PURE__*/React.createElement(DisplayColors, {\n      key: color,\n      color: color,\n      colorClick: this.saveColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"RowTwo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MatchedImages, {\n      allImages: this.state.allImages,\n      chooseFeatured: this.chooseFeaturedImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(About, {\n      currentColor: this.state.allColors,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/joshuagauthreaux/Development/code/project/extractor_frontend/src/App.js"],"names":["React","Component","DisplayColors","DisplayFeatureImage","MatchedImages","Palette","About","Pinned","App","constructor","componentDidMount","fetch","then","r","json","allImages","setState","allColors","chooseFeaturedImage","imageInfo","featuredImage","featureClick","image","console","log","id","state","map","img","pinned","updatePinned","method","headers","body","JSON","stringify","imageSrc","deleteMe","e","preventDefault","filter","saveColor","color","colors","rgb","render","html","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,mBAAP,MAAgC,kCAAhC;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CAGA;AACA;;AAIA,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AAC1BQ,EAAAA,WAAW,GAAG;AACZ;;AADY,SAWdC,iBAXc,GAWM,MAAM;AACxBC,MAAAA,KAAK,CAAC,8BAAD,CAAL,CAAsCC,IAAtC,CAA2CC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAAhD,EAA0DF,IAA1D,CAA+DG,SAAS,IAAI,KAAKC,QAAL,CAAc;AAAED,QAAAA;AAAF,OAAd,CAA5E;AACAJ,MAAAA,KAAK,CAAC,8BAAD,CAAL,CAAsCC,IAAtC,CAA2CC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAAhD,EAA0DF,IAA1D,CAA+DK,SAAS,IAAI,KAAKD,QAAL,CAAc;AAAEC,QAAAA;AAAF,OAAd,CAA5E;AACD,KAda;;AAAA,SAgBdC,mBAhBc,GAgBSC,SAAD,IAAe;AAEnC;AACA,WAAKH,QAAL,CAAc;AAAEI,QAAAA,aAAa,EAAED;AAAjB,OAAd;AAGD,KAtBa;;AAAA,SAwBdE,YAxBc,GAwBEC,KAAD,IAAW;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,EAAlB;AACA,WAAKT,QAAL,CAAc;AACZD,QAAAA,SAAS,EACP,KAAKW,KAAL,CAAWX,SAAX,CAAqBY,GAArB,CAAyBC,GAAG,IAAI;AAC9B,cAAIA,GAAG,CAACH,EAAJ,KAAWH,KAAK,CAACG,EAArB,EAAyB;AACxBG,YAAAA,GAAG,CAACC,MAAJ,GAAa,IAAb;AACA;;AACD,iBAAOD,GAAP;AACD,SALD;AAFU,OAAd;AAUA,WAAKE,YAAL,CAAkBR,KAAK,CAACG,EAAxB;AACD,KArCa;;AAAA,SAuCdK,YAvCc,GAuCEL,EAAD,IAAQ;AACrBF,MAAAA,OAAO,CAACC,GAAR,CAAYC,EAAZ;AACAd,MAAAA,KAAK,CAAE,gCAA+Bc,EAAG,EAApC,EAAuC;AAC1CM,QAAAA,MAAM,EAAE,OADkC;AAE1CC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEP,oBAAU;AAFH,SAFiC;AAM1CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEN,UAAAA,MAAM,EAAE;AAAV,SAAf;AANoC,OAAvC,CAAL,CAOGjB,IAPH,CAOQC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAPb,EAOuBF,IAPvB,CAO4BgB,GAAG,IAAIL,OAAO,CAACC,GAAR,CAAYI,GAAZ,CAPnC;AAQD,KAjDa;;AAAA,SAmDdQ,QAnDc,GAmDH,MAAM;AACf,UAAI,KAAKV,KAAL,CAAWN,aAAX,KAA6B,IAAjC,EAAuC;AACrC,eAAO,KAAKM,KAAL,CAAWN,aAAlB;AACD;AACF,KAvDa;;AAAA,SAyDdiB,QAzDc,GAyDH,CAACC,CAAD,EAAIb,EAAJ,KAAW;AACpBa,MAAAA,CAAC,CAACC,cAAF;AACAhB,MAAAA,OAAO,CAACC,GAAR,CAAYC,EAAZ;AACAd,MAAAA,KAAK,CAAE,gCAA+Bc,EAAG,EAApC,EAAuC;AAC1CM,QAAAA,MAAM,EAAE;AADkC,OAAvC,CAAL;AAGA,WAAKf,QAAL,CAAc;AAACI,QAAAA,aAAa,EAAE;AAAhB,OAAd;AACA,WAAKJ,QAAL,CAAc;AAACD,QAAAA,SAAS,EACrB,KAAKW,KAAL,CAAWX,SAAX,CAAqByB,MAArB,CAA4BZ,GAAG,IAAIA,GAAG,CAACH,EAAJ,KAAUA,EAA7C;AADW,OAAd;AAGD,KAnEa;;AAAA,SAqEdgB,SArEc,GAqEDC,KAAD,IAAW;AACrBnB,MAAAA,OAAO,CAACC,GAAR,CAAYkB,KAAZ;AACA,WAAK1B,QAAL,CAAc;AAAC2B,QAAAA,MAAM,EAAED;AAAT,OAAd;AACA/B,MAAAA,KAAK,CAAE,8BAAF,EAAiC;AACpCoB,QAAAA,MAAM,EAAE,MAD4B;AAEpCC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEP,oBAAU;AAFH,SAF2B;AAMpCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACS,UAAAA,GAAG,EAAEF;AAAN,SAAf;AAN8B,OAAjC,CAAL,CAQG9B,IARH,CAQQC,CAAC,IAAIA,CAAC,CAACC,IAAF,EARb,EAQuBF,IARvB,CAQ4BW,OAAO,CAACC,GAAR,CAAY,IAAZ,CAR5B;AAUD,KAlFa;;AAEZ,SAAKE,KAAL,GAAa;AACXX,MAAAA,SAAS,EAAE,IADA;AAEXE,MAAAA,SAAS,EAAE,IAFA;AAGXG,MAAAA,aAAa,EAAE,EAHJ;AAIXuB,MAAAA,MAAM,EAAE;AAJG,KAAb;AAOD;;AA4EDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAK,MAAA,SAAS,EAAE,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,mBAAD;AAAqB,MAAA,YAAY,EAAE,KAAKnB,KAAL,CAAWN,aAA9C;AAA6D,MAAA,aAAa,EAAE,KAAKC,YAAjF;AAA+F,MAAA,WAAW,EAAE,KAAKgB,QAAjH;AAA2H,MAAA,UAAU,EAAE,KAAKX,KAAL,CAAWiB,MAAlJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CAFF,eAUE,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAE,KAAKjB,KAAL,CAAWN,aAAX,CAAyB0B,IAAvC;AAA6C,MAAA,WAAW,EAAC,WAAzD;AAAqE,MAAA,UAAU,EAAE,CAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC;AAAEC,MAAAA;AAAF,KAAD,kBACC;AAAK,MAAA,SAAS,EAAE,KAAhB;AAAwB,MAAA,KAAK,EAAE;AAAEL,QAAAA,KAAK,EAAEK;AAAT,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,IAAI,CAACpB,GAAL,CAASe,KAAK,iBACb,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAEA,KAApB;AAA2B,MAAA,KAAK,EAAEA,KAAlC;AAAyC,MAAA,UAAU,EAAE,KAAKD,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CAFJ,CAVF,eAqBE;AAAK,MAAA,SAAS,EAAE,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,aAAD;AAAe,MAAA,SAAS,EAAE,KAAKf,KAAL,CAAWX,SAArC;AAAgD,MAAA,cAAc,EAAE,KAAKG,mBAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CArBF,eAwBE,oBAAC,KAAD;AAAO,MAAA,YAAY,EAAE,KAAKQ,KAAL,CAAWT,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxBF,CADF;AA6BC;;AApHuB;;AAsH3B;AAGD,eAAeT,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport DisplayColors from './components/DisplayColors'\nimport DisplayFeatureImage from './components/DisplayFeatureImage'\nimport MatchedImages from './components/MatchedImages'\nimport { Palette } from 'color-thief-react';\nimport About from './components/About'\nimport Pinned from './components/Pinned'\n\n\n// import ColorThief from '../node_modules/colorthief/dist/color-thief.mjs'\n// const ColorThief = require('colorthief');\n\n\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      allImages: null,\n      allColors: null,\n      featuredImage: [],\n      colors: [],\n    }\n  \n  }\n\n  componentDidMount = () => {\n    fetch(\"http://localhost:3001/images\").then(r => r.json()).then(allImages => this.setState({ allImages }));\n    fetch(\"http://localhost:3001/colors\").then(r => r.json()).then(allColors => this.setState({ allColors }));\n  }\n\n  chooseFeaturedImage = (imageInfo) => {\n\n    //console.log(\"we did it yay\", imageInfo)\n    this.setState({ featuredImage: imageInfo })\n   \n\n  }\n\n  featureClick = (image) => {\n    console.log(image.id)\n    this.setState({\n      allImages: \n        this.state.allImages.map(img => {\n          if (img.id === image.id) {\n           img.pinned = true\n          }\n          return img\n        })\n    });\n    \n    this.updatePinned(image.id)\n  }\n\n  updatePinned = (id) => {\n    console.log(id)\n    fetch(`http://localhost:3001/images/${id}`, {\n      method: 'PATCH',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({ pinned: true })\n    }).then(r => r.json()).then(img => console.log(img));\n  }\n\n  imageSrc = () => {\n    if (this.state.featuredImage !== null) {\n      return this.state.featuredImage\n    }\n  }\n\n  deleteMe = (e, id) => {\n    e.preventDefault()\n    console.log(id)\n    fetch(`http://localhost:3001/images/${id}`, {\n      method: \"DELETE\",\n    });\n    this.setState({featuredImage: []});\n    this.setState({allImages: \n       this.state.allImages.filter(img => img.id !==id)\n    })\n  }\n\n  saveColor = (color) => {\n    console.log(color);\n    this.setState({colors: color});\n    fetch(`http://localhost:3001/colors`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({rgb: color})\n\n    }).then(r => r.json()).then(console.log(\"hi\"));\n\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        {/* <nav className=\"RowTwo\"><h1>nav</h1></nav> */}\n        <div className={\"Card\"} >\n          \n          <span>\n            <DisplayFeatureImage featureImage={this.state.featuredImage} featuredClick={this.featureClick} handleClick={this.deleteMe} savedColor={this.state.colors}/>\n          </span>\n        </div>\n      \n\n        <Palette src={this.state.featuredImage.html} crossOrigin=\"Anonymous\" colorCount={3}>\n          {({ data }) => ( \n            <div className={\"Row\"}  style={{ color: data }}>\n              {data.map(color => (\n                <DisplayColors key={color} color={color} colorClick={this.saveColor}/>\n                \n              ))}\n            </div>\n          )}\n          </Palette>\n      \n        <div className={\"RowTwo\"} >\n            <MatchedImages allImages={this.state.allImages} chooseFeatured={this.chooseFeaturedImage} />\n        </div>\n        <About currentColor={this.state.allColors}/>\n      </div>\n\n    )\n    }\n\n};\n\n\nexport default App;\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}