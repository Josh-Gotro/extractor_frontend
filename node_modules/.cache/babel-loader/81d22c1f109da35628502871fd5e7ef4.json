{"ast":null,"code":"var _jsxFileName = \"/Users/JR/Documents/Development/code/Projects/extractor_frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport DisplayColors from './components/DisplayColors';\nimport DisplayFeatureImage from './components/DisplayFeatureImage';\nimport MatchedImages from './components/MatchedImages';\nimport { Palette } from 'color-thief-react'; // import ColorThief from '../node_modules/colorthief/dist/color-thief.mjs'\n// const ColorThief = require('colorthief');\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      fetch(\"http://localhost:3001/images\").then(r => r.json()).then(allImages => this.setState({\n        allImages\n      }));\n      fetch(\"http://localhost:3001/colors\").then(r => r.json()).then(allColors => this.setState({\n        allColors\n      }));\n    };\n\n    this.chooseFeaturedImage = imageInfo => {\n      console.log(\"we did it yay\", imageInfo);\n      this.setState({\n        featuredImage: imageInfo\n      }); // this.setState({})\n    };\n\n    this.featureClick = image => {\n      //console.log(\"ooooo mmmm gggg\", this.state)\n      this.setState({\n        allImages: this.state.allImages.map(img => {\n          if (img.id === image.id) {\n            img.pinned = true;\n          }\n\n          return img;\n        })\n      });\n    };\n\n    this.state = {\n      allImages: null,\n      allColors: null,\n      featuredImage: [],\n      colors: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(DisplayFeatureImage, {\n      featureImage: this.state.featuredImage,\n      featuredClick: this.featureClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Palette, {\n      src: this.state.featuredImage.html,\n      crossOrigin: \"Anonymous\",\n      colorCount: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, ({\n      data\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Hidden\",\n      style: {\n        color: data\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, data.map(color => /*#__PURE__*/React.createElement(DisplayColors, {\n      key: key,\n      className: \"splotch\",\n      color: color,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(MatchedImages, {\n      allImages: this.state.allImages,\n      chooseFeatured: this.chooseFeaturedImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/JR/Documents/Development/code/Projects/extractor_frontend/src/App.js"],"names":["React","Component","DisplayColors","DisplayFeatureImage","MatchedImages","Palette","App","constructor","componentDidMount","fetch","then","r","json","allImages","setState","allColors","chooseFeaturedImage","imageInfo","console","log","featuredImage","featureClick","image","state","map","img","id","pinned","colors","render","html","data","color","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport DisplayColors from './components/DisplayColors'\nimport DisplayFeatureImage from './components/DisplayFeatureImage'\nimport MatchedImages from './components/MatchedImages'\nimport { Palette } from 'color-thief-react';\n\n\n// import ColorThief from '../node_modules/colorthief/dist/color-thief.mjs'\n// const ColorThief = require('colorthief');\n\n\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      allImages: null,\n      allColors: null,\n      featuredImage: [],\n      colors: [],\n    }\n  }\n\n  componentDidMount = () => {\n    fetch(\"http://localhost:3001/images\").then(r => r.json()).then(allImages => this.setState({ allImages }));\n    fetch(\"http://localhost:3001/colors\").then(r => r.json()).then(allColors => this.setState({ allColors }));\n  }\n\n  chooseFeaturedImage = (imageInfo) => {\n    console.log(\"we did it yay\", imageInfo)\n    this.setState({ featuredImage: imageInfo })\n    // this.setState({})\n  }\n\n  featureClick = (image) => {\n    //console.log(\"ooooo mmmm gggg\", this.state)\n    this.setState({\n      allImages: \n        this.state.allImages.map(img => {\n          if (img.id === image.id) {\n           img.pinned = true\n          }\n          return img\n        })\n    })\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className={\"Card\"} >\n          <span>\n            <DisplayFeatureImage featureImage={this.state.featuredImage} featuredClick={this.featureClick}/>\n          </span>\n        </div>\n        <Palette src={this.state.featuredImage.html} crossOrigin=\"Anonymous\" colorCount={3}>\n          {({ data }) => ( \n            <div className='Hidden' style={{ color: data }}>\n              {data.map(color => (\n                <DisplayColors key={key} className='splotch' color={color} /> \n              ))}\n            </div>\n          )}\n          </Palette>\n        <MatchedImages allImages={this.state.allImages} chooseFeatured={this.chooseFeaturedImage}/>\n      </div>\n    )\n    }\n\n};\n\n\nexport default App;\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}