{"ast":null,"code":"var _jsxFileName = \"/Users/joshuagauthreaux/Development/code/project/extractor_frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport DisplayColors from './components/DisplayColors';\nimport DisplayFeatureImage from './components/DisplayFeatureImage';\nimport MatchedImages from './components/MatchedImages';\nimport { Palette } from 'color-thief-react';\nimport About from './components/About';\nimport Pinned from './components/Pinned';\nimport { Link, Route } from 'react-router-dom';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      fetch(\"http://localhost:3001/images\").then(r => r.json()).then(allImages => this.setState({\n        allImages\n      }));\n      fetch(\"http://localhost:3001/colors\").then(r => r.json()).then(allColors => this.setState({\n        allColors\n      }));\n      window.scrollTo(0, 0);\n    };\n\n    this.componentDidUpdate = () => {\n      window.scrollTo(0, 0);\n    };\n\n    this.chooseFeaturedImage = imageInfo => {\n      this.setState({\n        featuredImage: imageInfo\n      });\n      this.updatePinned(imageInfo.id);\n    };\n\n    this.featureClick = image => {\n      this.setState({\n        allImages: this.state.allImages.map(img => {\n          if (img.id === image.id) {\n            img.pinned = true;\n          }\n\n          return img;\n        })\n      });\n      this.state.allImages.filter(img => {\n        if (img.pinned = true) {\n          this.setState({\n            pinned: { ...pinned,\n              img\n            }\n          });\n        }\n      });\n    };\n\n    this.updatePinned = id => {\n      fetch(`http://localhost:3001/images/${id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          pinned: true\n        })\n      }); // .then(r => r.json()).then(img => console.log(\"yoyoyoyoyo\"));\n    };\n\n    this.imageSrc = () => {\n      if (this.state.featuredImage !== null) {\n        return this.state.featuredImage;\n      }\n    };\n\n    this.deleteMe = (e, id) => {\n      e.preventDefault();\n      console.log(id);\n      console.log(\"deleted from db :P \");\n      fetch(`http://localhost:3001/images/${id}`, {\n        method: \"DELETE\"\n      });\n      this.setState({\n        featuredImage: []\n      });\n      this.setState({\n        allImages: this.state.allImages.filter(img => img.id !== id)\n      });\n    };\n\n    this.saveColor = color => {\n      console.log(color);\n      this.setState({\n        colors: color\n      });\n      fetch(`http://localhost:3001/colors`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify({\n          rgb: color\n        })\n      }).then(r => r.json()).then(console.log(\"saved to db\"));\n    };\n\n    this.aboutClick = () => {\n      console.log('clikarooni');\n    };\n\n    this.pinClick = () => {\n      console.log(\"pin click\");\n    };\n\n    this.state = {\n      allImages: null,\n      allColors: null,\n      featuredImage: [],\n      colors: [],\n      pinned: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      pinClick: this.pinClick,\n      className: \"Triangledown\",\n      to: \"/about\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/about\",\n      component: About,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(DisplayFeatureImage, {\n      featureImage: this.state.featuredImage,\n      featuredClick: this.featureClick,\n      handleClick: this.deleteMe,\n      savedColor: this.state.colors,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"Triangle\",\n      to: \"/pinned\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/pinned\",\n      component: Pinned,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Palette, {\n      src: this.state.featuredImage.html,\n      crossOrigin: \"Anonymous\",\n      colorCount: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, ({\n      data\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Row\",\n      style: {\n        color: data\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, data.map(color => /*#__PURE__*/React.createElement(DisplayColors, {\n      key: color,\n      color: color,\n      colorClick: this.saveColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"RowTwo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MatchedImages, {\n      allImages: this.state.allImages,\n      chooseFeatured: this.chooseFeaturedImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/joshuagauthreaux/Development/code/project/extractor_frontend/src/App.js"],"names":["React","Component","DisplayColors","DisplayFeatureImage","MatchedImages","Palette","About","Pinned","Link","Route","App","constructor","componentDidMount","fetch","then","r","json","allImages","setState","allColors","window","scrollTo","componentDidUpdate","chooseFeaturedImage","imageInfo","featuredImage","updatePinned","id","featureClick","image","state","map","img","pinned","filter","method","headers","body","JSON","stringify","imageSrc","deleteMe","e","preventDefault","console","log","saveColor","color","colors","rgb","aboutClick","pinClick","render","html","data"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport DisplayColors from './components/DisplayColors'\nimport DisplayFeatureImage from './components/DisplayFeatureImage'\nimport MatchedImages from './components/MatchedImages'\nimport { Palette } from 'color-thief-react';\nimport About from './components/About'\nimport Pinned from './components/Pinned'\nimport { Link, Route } from 'react-router-dom'\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      allImages: null,\n      allColors: null,\n      featuredImage: [],\n      colors: [],\n      pinned: []\n    }\n \n  }\n\n  componentDidMount = () => {\n    fetch(\"http://localhost:3001/images\").then(r => r.json()).then(allImages => this.setState({ allImages }));\n    fetch(\"http://localhost:3001/colors\").then(r => r.json()).then(allColors => this.setState({ allColors }));\n    window.scrollTo(0, 0);\n  }\n\n  componentDidUpdate = () => {\n    window.scrollTo(0, 0);\n  }\n\n\n\n\n  chooseFeaturedImage = (imageInfo) => {\n    this.setState({ featuredImage: imageInfo })\n    this.updatePinned(imageInfo.id)\n  }\n\n  featureClick = (image) => {\n    this.setState({\n      allImages:\n        this.state.allImages.map(img => {\n          if (img.id === image.id) {\n            img.pinned = true;\n          }\n          return img\n        })\n    });\n\n    this.state.allImages.filter(img =>{\n      if (img.pinned = true) {\n        this.setState({ pinned: {...pinned, img}})\n      }\n    })\n  }\n\n  updatePinned = (id) => {\n    fetch(`http://localhost:3001/images/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({ pinned: true })\n    })\n    // .then(r => r.json()).then(img => console.log(\"yoyoyoyoyo\"));\n  }\n\n  imageSrc = () => {\n    if (this.state.featuredImage !== null) {\n      return this.state.featuredImage\n    }\n  }\n\n  deleteMe = (e, id) => {\n    e.preventDefault()\n    console.log(id)\n    console.log(\"deleted from db :P \")\n    fetch(`http://localhost:3001/images/${id}`, {\n      method: \"DELETE\",\n    });\n    this.setState({ featuredImage: [] });\n    this.setState({\n      allImages:\n        this.state.allImages.filter(img => img.id !== id)\n    })\n  }\n\n  saveColor = (color) => {\n    console.log(color);\n    this.setState({ colors: color });\n    fetch(`http://localhost:3001/colors`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({ rgb: color })\n\n    }).then(r => r.json()).then(console.log(\"saved to db\"));\n\n  }\n\n  aboutClick = () => {\n    console.log('clikarooni')\n  }\n\n  pinClick = () => {\n    console.log(\"pin click\")\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n    \n        {/* <nav className=\"RowTwo\"><h1>nav</h1></nav> */}\n        <span><Link pinClick={this.pinClick} className=\"Triangledown\" to='/about'></Link>\n          <Route path=\"/about\" component={About} /></span>\n\n        <div className={\"Card\"} >\n\n          <span>\n            <DisplayFeatureImage featureImage={this.state.featuredImage} featuredClick={this.featureClick} handleClick={this.deleteMe} savedColor={this.state.colors} />\n          </span>\n        </div>\n        <span><Link className=\"Triangle\" to='/pinned'></Link>\n          <Route path=\"/pinned\" component={Pinned} /></span>\n\n        <Palette src={this.state.featuredImage.html} crossOrigin=\"Anonymous\" colorCount={3}>\n          {({ data }) => (\n            <div className={\"Row\"} style={{ color: data }}>\n              {data.map(color => (\n                <DisplayColors key={color} color={color} colorClick={this.saveColor} />\n\n              ))}\n            </div>\n          )}\n        </Palette>\n\n        <div className={\"RowTwo\"} >\n          <MatchedImages allImages={this.state.allImages} chooseFeatured={this.chooseFeaturedImage} />\n        </div>\n    \n      </div>\n    )\n  }\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}